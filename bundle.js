(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var outerWidth = 700;
var outerHeight = 520;
var rMin = 1;
var rMax = 20;
var sidebarwidth = 150;
var margin = { left: 90, top: 30, right: 30, bottom: 80 };
var innerWidth = outerWidth - margin.left - margin.right - sidebarwidth;
var innerHeight = outerHeight - margin.top - margin.bottom;
var xColumn = "Living";
var yColumn = "Sell";
var rColumn = "List";
var colorColumn = "Category";
var xAxisText = xColumn;
var xAxisLabelOffset = 50;
var yAxisText = yColumn;
var yAxisLabelOffset = 45;
//most outer element
var container = d3.select("body").append("div")
    .attr("class", "container");
var svg = container.append("svg")
    .attr("width", "100%")
    .attr("height", "100%")
    .attr("max-width", "500")
    .attr("max-height", "500")
    .attr('viewBox', '0 0 ' + outerWidth + ' ' + outerHeight)
    .attr('preserveAspectRatio', 'xMinYMin meet');
//element within outer svg, centered via margins
var g = svg.append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
//group element for X and Y axes
var xAxisG = g.append("g")
    .attr("transform", "translate(0," + innerHeight + ")")
    .attr("class", "x axis");
var xAxisLabel = xAxisG.append("text")
    .style("text-anchor", "middle")
    .attr("x", innerWidth / 2)
    .attr("y", xAxisLabelOffset)
    .attr("class", "label")
    .text(xAxisText);
var yAxisG = g.append("g")
    .attr("class", "y axis");
var yAxisLabel = yAxisG.append("text")
    .style("text-anchor", "middle")
    .attr("transform", "translate(-" + yAxisLabelOffset + "," + innerHeight / 2 + ") rotate(-90)")
    .attr("class", "label")
    .text(yAxisText);
var colors = ["rgba(53, 219, 227, 0.6)", "rgba(146, 53, 227, 0.6)", "rgba(134, 230, 51, 0.6)"];
//x and y scales (y inverted because top->bottom)
var xScale = d3.scale.linear().range([0, innerWidth]);
var yScale = d3.scale.linear().range([innerHeight, 0]);
var rScale = d3.scale.sqrt().range([rMin, rMax]);
var colorScale = d3.scale.ordinal().range(colors);
//sidebar - legenda
var sidebarLeftMargin = margin.left + innerWidth;
var sidebar = svg.append("g")
    .attr("transform", "translate(" + sidebarLeftMargin + "," + margin.top + ")")
    .attr("class", "sidebar");
//kategorije - barve
var colorLegend = sidebar.append("g");
colorLegend.append("text")
    .text("Category")
    .attr("class", "categorylabel");
var colorLegendDataYoffset = 20;
var colorLegendData = colorLegend.append("g")
    .attr("transform", "translate(0," + colorLegendDataYoffset + ")");
function addLabel(item, index) {
    colorLegendData.append("rect")
        .attr("y", index * 30)
        .attr("height", 20)
        .attr("width", 20)
        .attr("fill", item);
    colorLegendData.append("text")
        .attr("y", 15 + index * 30)
        .attr("x", 30)
        .attr("class", "categorydata")
        .text(colorScale.domain()[index]);
}
//velikost kroga primerjava
//TODO
//X in Y osi
var xAxis = d3.svg.axis().scale(xScale).orient("bottom")
    .outerTickSize(0)
    .ticks(5);
var yAxis = d3.svg.axis().scale(yScale).orient("left")
    .ticks(5)
    .tickFormat(d3.format("s"))
    .outerTickSize(0);
function render(data) {
    // Bind data
    //console.log(data);
    var xDomain = d3.extent(data, function (d) { return d[xColumn]; });
    var yDomain = d3.extent(data, function (d) { return d[yColumn]; });
    xScale.domain([xDomain[0] * 0.9, xDomain[1] * 1.1]);
    yScale.domain([yDomain[0] * 0.9, yDomain[1] * 1.1]);
    rScale.domain(d3.extent(data, function (d) { return d[rColumn]; }));
    xAxisG.call(xAxis);
    yAxisG.call(yAxis);
    var circles = g.selectAll("circle").data(data);
    // Enter
    circles.enter().append("circle");
    // Update
    circles
        .attr("cx", function (d) { return xScale(d[xColumn]); })
        .attr("cy", function (d) { return yScale(d[yColumn]); })
        .attr("r", function (d) { return rScale(d[rColumn]); })
        .attr("class", function (d) { return d[colorColumn]; })
        .attr("fill", function (d) { return colorScale(d[colorColumn]).toString(); });
    colors.forEach(addLabel);
    // Exit
    circles.exit().remove();
}
//parses strings from file to ints
function type(d) {
    d[yColumn] = +d[yColumn];
    d[xColumn] = +d[xColumn];
    d[rColumn] = +d[rColumn];
    return d;
}
d3.csv("data/homes.csv", type, render);
},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
